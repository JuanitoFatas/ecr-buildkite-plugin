#!/bin/bash

set -eu -o pipefail

# Reads either a value or a list from plugin config
function plugin_read_list() {
  local prefix="BUILDKITE_PLUGIN_ECR_$1"
  local parameter="${prefix}_0"

  if [[ -n "${!parameter:-}" ]]; then
    local i=0
    local parameter="${prefix}_${i}"
    while [[ -n "${!parameter:-}" ]]; do
      echo "${!parameter}"
      i=$((i+1))
      parameter="${prefix}_${i}"
    done
  elif [[ -n "${!prefix:-}" ]]; then
    echo "${!prefix}"
  fi
}

# Check a provided aws-cli version is greater or equal than the current
function aws_version_ge() {
  local version; version="$(aws --version 2>&1 | awk -F'[/ ]' '{print $2}')"
  local wanted=( ${1//./ } )
  local current=( ${version//./ } )

  if [[ ! ${#current[@]} -eq 3 ]] ; then
    echo "Expected $version to be in the form x.y.z" >&2
    exit 1
  fi

  [[ ${current[0]} -gt ${wanted[0]} ]] && return 0
  [[ ${current[1]} -gt ${wanted[1]} ]] && return 0
  [[ ${current[2]} -ge ${wanted[2]} ]] && return 0

  echo "$version isn't ge $1" >&2
  return 1
}

# Retries a command on failure.
function retry() {
  local -r -i retries="$1"; shift
  local -i max_attempts=$((retries + 1))
  local -i attempt_num=1
  local exit_code

  until "$@" ; do
    exit_code=$?
    echo "$attempt_num == $retries" >&2
    if [[ $retries -eq 0 ]] ; then
      return $exit_code
    elif (( attempt_num == max_attempts )) ; then
      echo "Login failed after $attempt_num attempts" >&2
      return $exit_code
    else
      echo "Login failed on attempt ${attempt_num} of ${max_attempts}. Trying again in $attempt_num seconds..." >&2
      sleep $(( attempt_num++ ))
    fi
  done
}

if [[ -z "${AWS_DEFAULT_REGION:-}" ]] ; then
  export AWS_DEFAULT_REGION=us-east-1
fi

# If not specified, auto-detect if we can support no-include-email
if [[ -z "${BUILDKITE_PLUGIN_ECR_NO_INCLUDE_EMAIL:-}" ]] ; then
  if aws_version_ge "1.11.91" ; then
    BUILDKITE_PLUGIN_ECR_NO_INCLUDE_EMAIL="true"
  else
    BUILDKITE_PLUGIN_ECR_NO_INCLUDE_EMAIL="false"
  fi
fi

# For logging into the current AWS accountâ€™s registry
if [[ "${BUILDKITE_PLUGIN_ECR_LOGIN:-}" =~ ^(true|1)$ ]] ; then
  registry_ids=( $(plugin_read_list ACCOUNT_IDS | tr "," "\n") )
  login_args=()

  if [[ $BUILDKITE_PLUGIN_ECR_NO_INCLUDE_EMAIL =~ (true|on|1) ]] ; then
    login_args+=("--no-include-email")
  fi

  # In earlier versions, we supported registry-region. This is now deprecated
  if [[ -n "${BUILDKITE_PLUGIN_ECR_REGISTRY_REGION:-}" ]] ; then
    login_args+=("--region" "${BUILDKITE_PLUGIN_ECR_REGISTRY_REGION}")
  fi

  if [[ -n "${BUILDKITE_PLUGIN_ECR_REGION:-}" ]] ; then
    login_args+=("--region" "${BUILDKITE_PLUGIN_ECR_REGION}")
  fi

  if [[ ${#registry_ids[@]} -gt 0 ]] ; then
    echo "~~~ Authenticating with AWS ECR to ${registry_ids[*]}"
    login_args+=("--registry-ids" "${registry_ids[@]}")
  else
    echo "~~~ Authenticating with AWS ECR"
  fi

  if [[ -z "${BUILDKITE_PLUGIN_ECR_ACCESS_KEY_ID:-}" ]] ; then
    AWS_ACCESS_KEY_ID="$BUILDKITE_PLUGIN_ECR_ACCESS_KEY_ID"
  fi

  if [[ -z "${BUILDKITE_PLUGIN_ECR_SECRET_ACCESS_KEY_ENV:-}" ]] ; then
    AWS_SECRET_ACCESS_KEY="${!BUILDKITE_PLUGIN_ECR_SECRET_ACCESS_KEY_ENV}"
  fi

  # shellcheck disable=SC2068
  ecr_login=$(retry "${BUILDKITE_PLUGIN_ECR_RETRIES:-0}" aws ecr get-login ${login_args[@]+"${login_args[@]}"}) || exit $?

  # despite all the horror above, if we have docker > 17.06 it still breaks...
  eval "$(sed 's/-e none//' <<< "$ecr_login")"
fi
